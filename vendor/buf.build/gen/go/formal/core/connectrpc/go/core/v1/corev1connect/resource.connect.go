// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: core/v1/resource.proto

package corev1connect

import (
	v1 "buf.build/gen/go/formal/core/protocolbuffers/go/core/v1"
	connect "connectrpc.com/connect"
	context "context"
	errors "errors"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect.IsAtLeastVersion1_13_0

const (
	// ResourceServiceName is the fully-qualified name of the ResourceService service.
	ResourceServiceName = "core.v1.ResourceService"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// ResourceServiceGetResourceProcedure is the fully-qualified name of the ResourceService's
	// GetResource RPC.
	ResourceServiceGetResourceProcedure = "/core.v1.ResourceService/GetResource"
	// ResourceServiceListResourcesProcedure is the fully-qualified name of the ResourceService's
	// ListResources RPC.
	ResourceServiceListResourcesProcedure = "/core.v1.ResourceService/ListResources"
	// ResourceServiceCreateResourceProcedure is the fully-qualified name of the ResourceService's
	// CreateResource RPC.
	ResourceServiceCreateResourceProcedure = "/core.v1.ResourceService/CreateResource"
	// ResourceServiceUpdateResourceProcedure is the fully-qualified name of the ResourceService's
	// UpdateResource RPC.
	ResourceServiceUpdateResourceProcedure = "/core.v1.ResourceService/UpdateResource"
	// ResourceServiceDeleteResourceProcedure is the fully-qualified name of the ResourceService's
	// DeleteResource RPC.
	ResourceServiceDeleteResourceProcedure = "/core.v1.ResourceService/DeleteResource"
	// ResourceServiceCreateNativeUserProcedure is the fully-qualified name of the ResourceService's
	// CreateNativeUser RPC.
	ResourceServiceCreateNativeUserProcedure = "/core.v1.ResourceService/CreateNativeUser"
	// ResourceServiceGetNativeUserProcedure is the fully-qualified name of the ResourceService's
	// GetNativeUser RPC.
	ResourceServiceGetNativeUserProcedure = "/core.v1.ResourceService/GetNativeUser"
	// ResourceServiceListNativeUsersProcedure is the fully-qualified name of the ResourceService's
	// ListNativeUsers RPC.
	ResourceServiceListNativeUsersProcedure = "/core.v1.ResourceService/ListNativeUsers"
	// ResourceServiceDeleteNativeUserProcedure is the fully-qualified name of the ResourceService's
	// DeleteNativeUser RPC.
	ResourceServiceDeleteNativeUserProcedure = "/core.v1.ResourceService/DeleteNativeUser"
	// ResourceServiceUpdateNativeUserProcedure is the fully-qualified name of the ResourceService's
	// UpdateNativeUser RPC.
	ResourceServiceUpdateNativeUserProcedure = "/core.v1.ResourceService/UpdateNativeUser"
	// ResourceServiceCreateNativeUserIdentityLinkProcedure is the fully-qualified name of the
	// ResourceService's CreateNativeUserIdentityLink RPC.
	ResourceServiceCreateNativeUserIdentityLinkProcedure = "/core.v1.ResourceService/CreateNativeUserIdentityLink"
	// ResourceServiceGetNativeUserIdentityLinkProcedure is the fully-qualified name of the
	// ResourceService's GetNativeUserIdentityLink RPC.
	ResourceServiceGetNativeUserIdentityLinkProcedure = "/core.v1.ResourceService/GetNativeUserIdentityLink"
	// ResourceServiceListNativeUserIdentityLinksProcedure is the fully-qualified name of the
	// ResourceService's ListNativeUserIdentityLinks RPC.
	ResourceServiceListNativeUserIdentityLinksProcedure = "/core.v1.ResourceService/ListNativeUserIdentityLinks"
	// ResourceServiceUpdateNativeUserIdentityLinkProcedure is the fully-qualified name of the
	// ResourceService's UpdateNativeUserIdentityLink RPC.
	ResourceServiceUpdateNativeUserIdentityLinkProcedure = "/core.v1.ResourceService/UpdateNativeUserIdentityLink"
	// ResourceServiceDeleteNativeUserIdentityLinkProcedure is the fully-qualified name of the
	// ResourceService's DeleteNativeUserIdentityLink RPC.
	ResourceServiceDeleteNativeUserIdentityLinkProcedure = "/core.v1.ResourceService/DeleteNativeUserIdentityLink"
	// ResourceServiceGetDataDiscoveryConfigurationProcedure is the fully-qualified name of the
	// ResourceService's GetDataDiscoveryConfiguration RPC.
	ResourceServiceGetDataDiscoveryConfigurationProcedure = "/core.v1.ResourceService/GetDataDiscoveryConfiguration"
	// ResourceServiceCreateDataDiscoveryConfigurationProcedure is the fully-qualified name of the
	// ResourceService's CreateDataDiscoveryConfiguration RPC.
	ResourceServiceCreateDataDiscoveryConfigurationProcedure = "/core.v1.ResourceService/CreateDataDiscoveryConfiguration"
	// ResourceServiceUpdateDataDiscoveryConfigurationProcedure is the fully-qualified name of the
	// ResourceService's UpdateDataDiscoveryConfiguration RPC.
	ResourceServiceUpdateDataDiscoveryConfigurationProcedure = "/core.v1.ResourceService/UpdateDataDiscoveryConfiguration"
	// ResourceServiceDeleteDataDiscoveryConfigurationProcedure is the fully-qualified name of the
	// ResourceService's DeleteDataDiscoveryConfiguration RPC.
	ResourceServiceDeleteDataDiscoveryConfigurationProcedure = "/core.v1.ResourceService/DeleteDataDiscoveryConfiguration"
	// ResourceServiceListDataDiscoveryJobsProcedure is the fully-qualified name of the
	// ResourceService's ListDataDiscoveryJobs RPC.
	ResourceServiceListDataDiscoveryJobsProcedure = "/core.v1.ResourceService/ListDataDiscoveryJobs"
	// ResourceServiceCreateResourceHealthCheckProcedure is the fully-qualified name of the
	// ResourceService's CreateResourceHealthCheck RPC.
	ResourceServiceCreateResourceHealthCheckProcedure = "/core.v1.ResourceService/CreateResourceHealthCheck"
	// ResourceServiceGetResourceHealthCheckProcedure is the fully-qualified name of the
	// ResourceService's GetResourceHealthCheck RPC.
	ResourceServiceGetResourceHealthCheckProcedure = "/core.v1.ResourceService/GetResourceHealthCheck"
	// ResourceServiceUpdateResourceHealthCheckProcedure is the fully-qualified name of the
	// ResourceService's UpdateResourceHealthCheck RPC.
	ResourceServiceUpdateResourceHealthCheckProcedure = "/core.v1.ResourceService/UpdateResourceHealthCheck"
	// ResourceServiceDeleteResourceHealthCheckProcedure is the fully-qualified name of the
	// ResourceService's DeleteResourceHealthCheck RPC.
	ResourceServiceDeleteResourceHealthCheckProcedure = "/core.v1.ResourceService/DeleteResourceHealthCheck"
	// ResourceServiceGetResourceOwnerProcedure is the fully-qualified name of the ResourceService's
	// GetResourceOwner RPC.
	ResourceServiceGetResourceOwnerProcedure = "/core.v1.ResourceService/GetResourceOwner"
	// ResourceServiceListResourceOwnersProcedure is the fully-qualified name of the ResourceService's
	// ListResourceOwners RPC.
	ResourceServiceListResourceOwnersProcedure = "/core.v1.ResourceService/ListResourceOwners"
	// ResourceServiceCreateResourceOwnerProcedure is the fully-qualified name of the ResourceService's
	// CreateResourceOwner RPC.
	ResourceServiceCreateResourceOwnerProcedure = "/core.v1.ResourceService/CreateResourceOwner"
	// ResourceServiceDeleteResourceOwnerProcedure is the fully-qualified name of the ResourceService's
	// DeleteResourceOwner RPC.
	ResourceServiceDeleteResourceOwnerProcedure = "/core.v1.ResourceService/DeleteResourceOwner"
)

// These variables are the protoreflect.Descriptor objects for the RPCs defined in this package.
var (
	resourceServiceServiceDescriptor                                = v1.File_core_v1_resource_proto.Services().ByName("ResourceService")
	resourceServiceGetResourceMethodDescriptor                      = resourceServiceServiceDescriptor.Methods().ByName("GetResource")
	resourceServiceListResourcesMethodDescriptor                    = resourceServiceServiceDescriptor.Methods().ByName("ListResources")
	resourceServiceCreateResourceMethodDescriptor                   = resourceServiceServiceDescriptor.Methods().ByName("CreateResource")
	resourceServiceUpdateResourceMethodDescriptor                   = resourceServiceServiceDescriptor.Methods().ByName("UpdateResource")
	resourceServiceDeleteResourceMethodDescriptor                   = resourceServiceServiceDescriptor.Methods().ByName("DeleteResource")
	resourceServiceCreateNativeUserMethodDescriptor                 = resourceServiceServiceDescriptor.Methods().ByName("CreateNativeUser")
	resourceServiceGetNativeUserMethodDescriptor                    = resourceServiceServiceDescriptor.Methods().ByName("GetNativeUser")
	resourceServiceListNativeUsersMethodDescriptor                  = resourceServiceServiceDescriptor.Methods().ByName("ListNativeUsers")
	resourceServiceDeleteNativeUserMethodDescriptor                 = resourceServiceServiceDescriptor.Methods().ByName("DeleteNativeUser")
	resourceServiceUpdateNativeUserMethodDescriptor                 = resourceServiceServiceDescriptor.Methods().ByName("UpdateNativeUser")
	resourceServiceCreateNativeUserIdentityLinkMethodDescriptor     = resourceServiceServiceDescriptor.Methods().ByName("CreateNativeUserIdentityLink")
	resourceServiceGetNativeUserIdentityLinkMethodDescriptor        = resourceServiceServiceDescriptor.Methods().ByName("GetNativeUserIdentityLink")
	resourceServiceListNativeUserIdentityLinksMethodDescriptor      = resourceServiceServiceDescriptor.Methods().ByName("ListNativeUserIdentityLinks")
	resourceServiceUpdateNativeUserIdentityLinkMethodDescriptor     = resourceServiceServiceDescriptor.Methods().ByName("UpdateNativeUserIdentityLink")
	resourceServiceDeleteNativeUserIdentityLinkMethodDescriptor     = resourceServiceServiceDescriptor.Methods().ByName("DeleteNativeUserIdentityLink")
	resourceServiceGetDataDiscoveryConfigurationMethodDescriptor    = resourceServiceServiceDescriptor.Methods().ByName("GetDataDiscoveryConfiguration")
	resourceServiceCreateDataDiscoveryConfigurationMethodDescriptor = resourceServiceServiceDescriptor.Methods().ByName("CreateDataDiscoveryConfiguration")
	resourceServiceUpdateDataDiscoveryConfigurationMethodDescriptor = resourceServiceServiceDescriptor.Methods().ByName("UpdateDataDiscoveryConfiguration")
	resourceServiceDeleteDataDiscoveryConfigurationMethodDescriptor = resourceServiceServiceDescriptor.Methods().ByName("DeleteDataDiscoveryConfiguration")
	resourceServiceListDataDiscoveryJobsMethodDescriptor            = resourceServiceServiceDescriptor.Methods().ByName("ListDataDiscoveryJobs")
	resourceServiceCreateResourceHealthCheckMethodDescriptor        = resourceServiceServiceDescriptor.Methods().ByName("CreateResourceHealthCheck")
	resourceServiceGetResourceHealthCheckMethodDescriptor           = resourceServiceServiceDescriptor.Methods().ByName("GetResourceHealthCheck")
	resourceServiceUpdateResourceHealthCheckMethodDescriptor        = resourceServiceServiceDescriptor.Methods().ByName("UpdateResourceHealthCheck")
	resourceServiceDeleteResourceHealthCheckMethodDescriptor        = resourceServiceServiceDescriptor.Methods().ByName("DeleteResourceHealthCheck")
	resourceServiceGetResourceOwnerMethodDescriptor                 = resourceServiceServiceDescriptor.Methods().ByName("GetResourceOwner")
	resourceServiceListResourceOwnersMethodDescriptor               = resourceServiceServiceDescriptor.Methods().ByName("ListResourceOwners")
	resourceServiceCreateResourceOwnerMethodDescriptor              = resourceServiceServiceDescriptor.Methods().ByName("CreateResourceOwner")
	resourceServiceDeleteResourceOwnerMethodDescriptor              = resourceServiceServiceDescriptor.Methods().ByName("DeleteResourceOwner")
)

// ResourceServiceClient is a client for the core.v1.ResourceService service.
type ResourceServiceClient interface {
	GetResource(context.Context, *connect.Request[v1.GetResourceRequest]) (*connect.Response[v1.GetResourceResponse], error)
	ListResources(context.Context, *connect.Request[v1.ListResourcesRequest]) (*connect.Response[v1.ListResourcesResponse], error)
	CreateResource(context.Context, *connect.Request[v1.CreateResourceRequest]) (*connect.Response[v1.CreateResourceResponse], error)
	UpdateResource(context.Context, *connect.Request[v1.UpdateResourceRequest]) (*connect.Response[v1.UpdateResourceResponse], error)
	DeleteResource(context.Context, *connect.Request[v1.DeleteResourceRequest]) (*connect.Response[v1.DeleteResourceResponse], error)
	CreateNativeUser(context.Context, *connect.Request[v1.CreateNativeUserRequest]) (*connect.Response[v1.CreateNativeUserResponse], error)
	GetNativeUser(context.Context, *connect.Request[v1.GetNativeUserRequest]) (*connect.Response[v1.GetNativeUserResponse], error)
	ListNativeUsers(context.Context, *connect.Request[v1.ListNativeUsersRequest]) (*connect.Response[v1.ListNativeUsersResponse], error)
	DeleteNativeUser(context.Context, *connect.Request[v1.DeleteNativeUserRequest]) (*connect.Response[v1.DeleteNativeUserResponse], error)
	UpdateNativeUser(context.Context, *connect.Request[v1.UpdateNativeUserRequest]) (*connect.Response[v1.UpdateNativeUserResponse], error)
	CreateNativeUserIdentityLink(context.Context, *connect.Request[v1.CreateNativeUserIdentityLinkRequest]) (*connect.Response[v1.CreateNativeUserIdentityLinkResponse], error)
	GetNativeUserIdentityLink(context.Context, *connect.Request[v1.GetNativeUserIdentityLinkRequest]) (*connect.Response[v1.GetNativeUserIdentityLinkResponse], error)
	ListNativeUserIdentityLinks(context.Context, *connect.Request[v1.ListNativeUserIdentityLinksRequest]) (*connect.Response[v1.ListNativeUserIdentityLinksResponse], error)
	UpdateNativeUserIdentityLink(context.Context, *connect.Request[v1.UpdateNativeUserIdentityLinkRequest]) (*connect.Response[v1.UpdateNativeUserIdentityLinkResponse], error)
	DeleteNativeUserIdentityLink(context.Context, *connect.Request[v1.DeleteNativeUserIdentityLinkRequest]) (*connect.Response[v1.DeleteNativeUserIdentityLinkResponse], error)
	GetDataDiscoveryConfiguration(context.Context, *connect.Request[v1.GetDataDiscoveryConfigurationRequest]) (*connect.Response[v1.GetDataDiscoveryConfigurationResponse], error)
	CreateDataDiscoveryConfiguration(context.Context, *connect.Request[v1.CreateDataDiscoveryConfigurationRequest]) (*connect.Response[v1.CreateDataDiscoveryConfigurationResponse], error)
	UpdateDataDiscoveryConfiguration(context.Context, *connect.Request[v1.UpdateDataDiscoveryConfigurationRequest]) (*connect.Response[v1.UpdateDataDiscoveryConfigurationResponse], error)
	DeleteDataDiscoveryConfiguration(context.Context, *connect.Request[v1.DeleteDataDiscoveryConfigurationRequest]) (*connect.Response[v1.DeleteDataDiscoveryConfigurationResponse], error)
	ListDataDiscoveryJobs(context.Context, *connect.Request[v1.ListDataDiscoveryJobsRequest]) (*connect.Response[v1.ListDataDiscoveryJobsResponse], error)
	CreateResourceHealthCheck(context.Context, *connect.Request[v1.CreateResourceHealthCheckRequest]) (*connect.Response[v1.CreateResourceHealthCheckResponse], error)
	GetResourceHealthCheck(context.Context, *connect.Request[v1.GetResourceHealthCheckRequest]) (*connect.Response[v1.GetResourceHealthCheckResponse], error)
	UpdateResourceHealthCheck(context.Context, *connect.Request[v1.UpdateResourceHealthCheckRequest]) (*connect.Response[v1.UpdateResourceHealthCheckResponse], error)
	DeleteResourceHealthCheck(context.Context, *connect.Request[v1.DeleteResourceHealthCheckRequest]) (*connect.Response[v1.DeleteResourceHealthCheckResponse], error)
	// Owners
	GetResourceOwner(context.Context, *connect.Request[v1.GetResourceOwnerRequest]) (*connect.Response[v1.GetResourceOwnerResponse], error)
	ListResourceOwners(context.Context, *connect.Request[v1.ListResourceOwnersRequest]) (*connect.Response[v1.ListResourceOwnersResponse], error)
	CreateResourceOwner(context.Context, *connect.Request[v1.CreateResourceOwnerRequest]) (*connect.Response[v1.CreateResourceOwnerResponse], error)
	DeleteResourceOwner(context.Context, *connect.Request[v1.DeleteResourceOwnerRequest]) (*connect.Response[v1.DeleteResourceOwnerResponse], error)
}

// NewResourceServiceClient constructs a client for the core.v1.ResourceService service. By default,
// it uses the Connect protocol with the binary Protobuf Codec, asks for gzipped responses, and
// sends uncompressed requests. To use the gRPC or gRPC-Web protocols, supply the connect.WithGRPC()
// or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewResourceServiceClient(httpClient connect.HTTPClient, baseURL string, opts ...connect.ClientOption) ResourceServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &resourceServiceClient{
		getResource: connect.NewClient[v1.GetResourceRequest, v1.GetResourceResponse](
			httpClient,
			baseURL+ResourceServiceGetResourceProcedure,
			connect.WithSchema(resourceServiceGetResourceMethodDescriptor),
			connect.WithIdempotency(connect.IdempotencyNoSideEffects),
			connect.WithClientOptions(opts...),
		),
		listResources: connect.NewClient[v1.ListResourcesRequest, v1.ListResourcesResponse](
			httpClient,
			baseURL+ResourceServiceListResourcesProcedure,
			connect.WithSchema(resourceServiceListResourcesMethodDescriptor),
			connect.WithIdempotency(connect.IdempotencyNoSideEffects),
			connect.WithClientOptions(opts...),
		),
		createResource: connect.NewClient[v1.CreateResourceRequest, v1.CreateResourceResponse](
			httpClient,
			baseURL+ResourceServiceCreateResourceProcedure,
			connect.WithSchema(resourceServiceCreateResourceMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		updateResource: connect.NewClient[v1.UpdateResourceRequest, v1.UpdateResourceResponse](
			httpClient,
			baseURL+ResourceServiceUpdateResourceProcedure,
			connect.WithSchema(resourceServiceUpdateResourceMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		deleteResource: connect.NewClient[v1.DeleteResourceRequest, v1.DeleteResourceResponse](
			httpClient,
			baseURL+ResourceServiceDeleteResourceProcedure,
			connect.WithSchema(resourceServiceDeleteResourceMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		createNativeUser: connect.NewClient[v1.CreateNativeUserRequest, v1.CreateNativeUserResponse](
			httpClient,
			baseURL+ResourceServiceCreateNativeUserProcedure,
			connect.WithSchema(resourceServiceCreateNativeUserMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		getNativeUser: connect.NewClient[v1.GetNativeUserRequest, v1.GetNativeUserResponse](
			httpClient,
			baseURL+ResourceServiceGetNativeUserProcedure,
			connect.WithSchema(resourceServiceGetNativeUserMethodDescriptor),
			connect.WithIdempotency(connect.IdempotencyNoSideEffects),
			connect.WithClientOptions(opts...),
		),
		listNativeUsers: connect.NewClient[v1.ListNativeUsersRequest, v1.ListNativeUsersResponse](
			httpClient,
			baseURL+ResourceServiceListNativeUsersProcedure,
			connect.WithSchema(resourceServiceListNativeUsersMethodDescriptor),
			connect.WithIdempotency(connect.IdempotencyNoSideEffects),
			connect.WithClientOptions(opts...),
		),
		deleteNativeUser: connect.NewClient[v1.DeleteNativeUserRequest, v1.DeleteNativeUserResponse](
			httpClient,
			baseURL+ResourceServiceDeleteNativeUserProcedure,
			connect.WithSchema(resourceServiceDeleteNativeUserMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		updateNativeUser: connect.NewClient[v1.UpdateNativeUserRequest, v1.UpdateNativeUserResponse](
			httpClient,
			baseURL+ResourceServiceUpdateNativeUserProcedure,
			connect.WithSchema(resourceServiceUpdateNativeUserMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		createNativeUserIdentityLink: connect.NewClient[v1.CreateNativeUserIdentityLinkRequest, v1.CreateNativeUserIdentityLinkResponse](
			httpClient,
			baseURL+ResourceServiceCreateNativeUserIdentityLinkProcedure,
			connect.WithSchema(resourceServiceCreateNativeUserIdentityLinkMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		getNativeUserIdentityLink: connect.NewClient[v1.GetNativeUserIdentityLinkRequest, v1.GetNativeUserIdentityLinkResponse](
			httpClient,
			baseURL+ResourceServiceGetNativeUserIdentityLinkProcedure,
			connect.WithSchema(resourceServiceGetNativeUserIdentityLinkMethodDescriptor),
			connect.WithIdempotency(connect.IdempotencyNoSideEffects),
			connect.WithClientOptions(opts...),
		),
		listNativeUserIdentityLinks: connect.NewClient[v1.ListNativeUserIdentityLinksRequest, v1.ListNativeUserIdentityLinksResponse](
			httpClient,
			baseURL+ResourceServiceListNativeUserIdentityLinksProcedure,
			connect.WithSchema(resourceServiceListNativeUserIdentityLinksMethodDescriptor),
			connect.WithIdempotency(connect.IdempotencyNoSideEffects),
			connect.WithClientOptions(opts...),
		),
		updateNativeUserIdentityLink: connect.NewClient[v1.UpdateNativeUserIdentityLinkRequest, v1.UpdateNativeUserIdentityLinkResponse](
			httpClient,
			baseURL+ResourceServiceUpdateNativeUserIdentityLinkProcedure,
			connect.WithSchema(resourceServiceUpdateNativeUserIdentityLinkMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		deleteNativeUserIdentityLink: connect.NewClient[v1.DeleteNativeUserIdentityLinkRequest, v1.DeleteNativeUserIdentityLinkResponse](
			httpClient,
			baseURL+ResourceServiceDeleteNativeUserIdentityLinkProcedure,
			connect.WithSchema(resourceServiceDeleteNativeUserIdentityLinkMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		getDataDiscoveryConfiguration: connect.NewClient[v1.GetDataDiscoveryConfigurationRequest, v1.GetDataDiscoveryConfigurationResponse](
			httpClient,
			baseURL+ResourceServiceGetDataDiscoveryConfigurationProcedure,
			connect.WithSchema(resourceServiceGetDataDiscoveryConfigurationMethodDescriptor),
			connect.WithIdempotency(connect.IdempotencyNoSideEffects),
			connect.WithClientOptions(opts...),
		),
		createDataDiscoveryConfiguration: connect.NewClient[v1.CreateDataDiscoveryConfigurationRequest, v1.CreateDataDiscoveryConfigurationResponse](
			httpClient,
			baseURL+ResourceServiceCreateDataDiscoveryConfigurationProcedure,
			connect.WithSchema(resourceServiceCreateDataDiscoveryConfigurationMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		updateDataDiscoveryConfiguration: connect.NewClient[v1.UpdateDataDiscoveryConfigurationRequest, v1.UpdateDataDiscoveryConfigurationResponse](
			httpClient,
			baseURL+ResourceServiceUpdateDataDiscoveryConfigurationProcedure,
			connect.WithSchema(resourceServiceUpdateDataDiscoveryConfigurationMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		deleteDataDiscoveryConfiguration: connect.NewClient[v1.DeleteDataDiscoveryConfigurationRequest, v1.DeleteDataDiscoveryConfigurationResponse](
			httpClient,
			baseURL+ResourceServiceDeleteDataDiscoveryConfigurationProcedure,
			connect.WithSchema(resourceServiceDeleteDataDiscoveryConfigurationMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		listDataDiscoveryJobs: connect.NewClient[v1.ListDataDiscoveryJobsRequest, v1.ListDataDiscoveryJobsResponse](
			httpClient,
			baseURL+ResourceServiceListDataDiscoveryJobsProcedure,
			connect.WithSchema(resourceServiceListDataDiscoveryJobsMethodDescriptor),
			connect.WithIdempotency(connect.IdempotencyNoSideEffects),
			connect.WithClientOptions(opts...),
		),
		createResourceHealthCheck: connect.NewClient[v1.CreateResourceHealthCheckRequest, v1.CreateResourceHealthCheckResponse](
			httpClient,
			baseURL+ResourceServiceCreateResourceHealthCheckProcedure,
			connect.WithSchema(resourceServiceCreateResourceHealthCheckMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		getResourceHealthCheck: connect.NewClient[v1.GetResourceHealthCheckRequest, v1.GetResourceHealthCheckResponse](
			httpClient,
			baseURL+ResourceServiceGetResourceHealthCheckProcedure,
			connect.WithSchema(resourceServiceGetResourceHealthCheckMethodDescriptor),
			connect.WithIdempotency(connect.IdempotencyNoSideEffects),
			connect.WithClientOptions(opts...),
		),
		updateResourceHealthCheck: connect.NewClient[v1.UpdateResourceHealthCheckRequest, v1.UpdateResourceHealthCheckResponse](
			httpClient,
			baseURL+ResourceServiceUpdateResourceHealthCheckProcedure,
			connect.WithSchema(resourceServiceUpdateResourceHealthCheckMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		deleteResourceHealthCheck: connect.NewClient[v1.DeleteResourceHealthCheckRequest, v1.DeleteResourceHealthCheckResponse](
			httpClient,
			baseURL+ResourceServiceDeleteResourceHealthCheckProcedure,
			connect.WithSchema(resourceServiceDeleteResourceHealthCheckMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		getResourceOwner: connect.NewClient[v1.GetResourceOwnerRequest, v1.GetResourceOwnerResponse](
			httpClient,
			baseURL+ResourceServiceGetResourceOwnerProcedure,
			connect.WithSchema(resourceServiceGetResourceOwnerMethodDescriptor),
			connect.WithIdempotency(connect.IdempotencyNoSideEffects),
			connect.WithClientOptions(opts...),
		),
		listResourceOwners: connect.NewClient[v1.ListResourceOwnersRequest, v1.ListResourceOwnersResponse](
			httpClient,
			baseURL+ResourceServiceListResourceOwnersProcedure,
			connect.WithSchema(resourceServiceListResourceOwnersMethodDescriptor),
			connect.WithIdempotency(connect.IdempotencyNoSideEffects),
			connect.WithClientOptions(opts...),
		),
		createResourceOwner: connect.NewClient[v1.CreateResourceOwnerRequest, v1.CreateResourceOwnerResponse](
			httpClient,
			baseURL+ResourceServiceCreateResourceOwnerProcedure,
			connect.WithSchema(resourceServiceCreateResourceOwnerMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		deleteResourceOwner: connect.NewClient[v1.DeleteResourceOwnerRequest, v1.DeleteResourceOwnerResponse](
			httpClient,
			baseURL+ResourceServiceDeleteResourceOwnerProcedure,
			connect.WithSchema(resourceServiceDeleteResourceOwnerMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
	}
}

// resourceServiceClient implements ResourceServiceClient.
type resourceServiceClient struct {
	getResource                      *connect.Client[v1.GetResourceRequest, v1.GetResourceResponse]
	listResources                    *connect.Client[v1.ListResourcesRequest, v1.ListResourcesResponse]
	createResource                   *connect.Client[v1.CreateResourceRequest, v1.CreateResourceResponse]
	updateResource                   *connect.Client[v1.UpdateResourceRequest, v1.UpdateResourceResponse]
	deleteResource                   *connect.Client[v1.DeleteResourceRequest, v1.DeleteResourceResponse]
	createNativeUser                 *connect.Client[v1.CreateNativeUserRequest, v1.CreateNativeUserResponse]
	getNativeUser                    *connect.Client[v1.GetNativeUserRequest, v1.GetNativeUserResponse]
	listNativeUsers                  *connect.Client[v1.ListNativeUsersRequest, v1.ListNativeUsersResponse]
	deleteNativeUser                 *connect.Client[v1.DeleteNativeUserRequest, v1.DeleteNativeUserResponse]
	updateNativeUser                 *connect.Client[v1.UpdateNativeUserRequest, v1.UpdateNativeUserResponse]
	createNativeUserIdentityLink     *connect.Client[v1.CreateNativeUserIdentityLinkRequest, v1.CreateNativeUserIdentityLinkResponse]
	getNativeUserIdentityLink        *connect.Client[v1.GetNativeUserIdentityLinkRequest, v1.GetNativeUserIdentityLinkResponse]
	listNativeUserIdentityLinks      *connect.Client[v1.ListNativeUserIdentityLinksRequest, v1.ListNativeUserIdentityLinksResponse]
	updateNativeUserIdentityLink     *connect.Client[v1.UpdateNativeUserIdentityLinkRequest, v1.UpdateNativeUserIdentityLinkResponse]
	deleteNativeUserIdentityLink     *connect.Client[v1.DeleteNativeUserIdentityLinkRequest, v1.DeleteNativeUserIdentityLinkResponse]
	getDataDiscoveryConfiguration    *connect.Client[v1.GetDataDiscoveryConfigurationRequest, v1.GetDataDiscoveryConfigurationResponse]
	createDataDiscoveryConfiguration *connect.Client[v1.CreateDataDiscoveryConfigurationRequest, v1.CreateDataDiscoveryConfigurationResponse]
	updateDataDiscoveryConfiguration *connect.Client[v1.UpdateDataDiscoveryConfigurationRequest, v1.UpdateDataDiscoveryConfigurationResponse]
	deleteDataDiscoveryConfiguration *connect.Client[v1.DeleteDataDiscoveryConfigurationRequest, v1.DeleteDataDiscoveryConfigurationResponse]
	listDataDiscoveryJobs            *connect.Client[v1.ListDataDiscoveryJobsRequest, v1.ListDataDiscoveryJobsResponse]
	createResourceHealthCheck        *connect.Client[v1.CreateResourceHealthCheckRequest, v1.CreateResourceHealthCheckResponse]
	getResourceHealthCheck           *connect.Client[v1.GetResourceHealthCheckRequest, v1.GetResourceHealthCheckResponse]
	updateResourceHealthCheck        *connect.Client[v1.UpdateResourceHealthCheckRequest, v1.UpdateResourceHealthCheckResponse]
	deleteResourceHealthCheck        *connect.Client[v1.DeleteResourceHealthCheckRequest, v1.DeleteResourceHealthCheckResponse]
	getResourceOwner                 *connect.Client[v1.GetResourceOwnerRequest, v1.GetResourceOwnerResponse]
	listResourceOwners               *connect.Client[v1.ListResourceOwnersRequest, v1.ListResourceOwnersResponse]
	createResourceOwner              *connect.Client[v1.CreateResourceOwnerRequest, v1.CreateResourceOwnerResponse]
	deleteResourceOwner              *connect.Client[v1.DeleteResourceOwnerRequest, v1.DeleteResourceOwnerResponse]
}

// GetResource calls core.v1.ResourceService.GetResource.
func (c *resourceServiceClient) GetResource(ctx context.Context, req *connect.Request[v1.GetResourceRequest]) (*connect.Response[v1.GetResourceResponse], error) {
	return c.getResource.CallUnary(ctx, req)
}

// ListResources calls core.v1.ResourceService.ListResources.
func (c *resourceServiceClient) ListResources(ctx context.Context, req *connect.Request[v1.ListResourcesRequest]) (*connect.Response[v1.ListResourcesResponse], error) {
	return c.listResources.CallUnary(ctx, req)
}

// CreateResource calls core.v1.ResourceService.CreateResource.
func (c *resourceServiceClient) CreateResource(ctx context.Context, req *connect.Request[v1.CreateResourceRequest]) (*connect.Response[v1.CreateResourceResponse], error) {
	return c.createResource.CallUnary(ctx, req)
}

// UpdateResource calls core.v1.ResourceService.UpdateResource.
func (c *resourceServiceClient) UpdateResource(ctx context.Context, req *connect.Request[v1.UpdateResourceRequest]) (*connect.Response[v1.UpdateResourceResponse], error) {
	return c.updateResource.CallUnary(ctx, req)
}

// DeleteResource calls core.v1.ResourceService.DeleteResource.
func (c *resourceServiceClient) DeleteResource(ctx context.Context, req *connect.Request[v1.DeleteResourceRequest]) (*connect.Response[v1.DeleteResourceResponse], error) {
	return c.deleteResource.CallUnary(ctx, req)
}

// CreateNativeUser calls core.v1.ResourceService.CreateNativeUser.
func (c *resourceServiceClient) CreateNativeUser(ctx context.Context, req *connect.Request[v1.CreateNativeUserRequest]) (*connect.Response[v1.CreateNativeUserResponse], error) {
	return c.createNativeUser.CallUnary(ctx, req)
}

// GetNativeUser calls core.v1.ResourceService.GetNativeUser.
func (c *resourceServiceClient) GetNativeUser(ctx context.Context, req *connect.Request[v1.GetNativeUserRequest]) (*connect.Response[v1.GetNativeUserResponse], error) {
	return c.getNativeUser.CallUnary(ctx, req)
}

// ListNativeUsers calls core.v1.ResourceService.ListNativeUsers.
func (c *resourceServiceClient) ListNativeUsers(ctx context.Context, req *connect.Request[v1.ListNativeUsersRequest]) (*connect.Response[v1.ListNativeUsersResponse], error) {
	return c.listNativeUsers.CallUnary(ctx, req)
}

// DeleteNativeUser calls core.v1.ResourceService.DeleteNativeUser.
func (c *resourceServiceClient) DeleteNativeUser(ctx context.Context, req *connect.Request[v1.DeleteNativeUserRequest]) (*connect.Response[v1.DeleteNativeUserResponse], error) {
	return c.deleteNativeUser.CallUnary(ctx, req)
}

// UpdateNativeUser calls core.v1.ResourceService.UpdateNativeUser.
func (c *resourceServiceClient) UpdateNativeUser(ctx context.Context, req *connect.Request[v1.UpdateNativeUserRequest]) (*connect.Response[v1.UpdateNativeUserResponse], error) {
	return c.updateNativeUser.CallUnary(ctx, req)
}

// CreateNativeUserIdentityLink calls core.v1.ResourceService.CreateNativeUserIdentityLink.
func (c *resourceServiceClient) CreateNativeUserIdentityLink(ctx context.Context, req *connect.Request[v1.CreateNativeUserIdentityLinkRequest]) (*connect.Response[v1.CreateNativeUserIdentityLinkResponse], error) {
	return c.createNativeUserIdentityLink.CallUnary(ctx, req)
}

// GetNativeUserIdentityLink calls core.v1.ResourceService.GetNativeUserIdentityLink.
func (c *resourceServiceClient) GetNativeUserIdentityLink(ctx context.Context, req *connect.Request[v1.GetNativeUserIdentityLinkRequest]) (*connect.Response[v1.GetNativeUserIdentityLinkResponse], error) {
	return c.getNativeUserIdentityLink.CallUnary(ctx, req)
}

// ListNativeUserIdentityLinks calls core.v1.ResourceService.ListNativeUserIdentityLinks.
func (c *resourceServiceClient) ListNativeUserIdentityLinks(ctx context.Context, req *connect.Request[v1.ListNativeUserIdentityLinksRequest]) (*connect.Response[v1.ListNativeUserIdentityLinksResponse], error) {
	return c.listNativeUserIdentityLinks.CallUnary(ctx, req)
}

// UpdateNativeUserIdentityLink calls core.v1.ResourceService.UpdateNativeUserIdentityLink.
func (c *resourceServiceClient) UpdateNativeUserIdentityLink(ctx context.Context, req *connect.Request[v1.UpdateNativeUserIdentityLinkRequest]) (*connect.Response[v1.UpdateNativeUserIdentityLinkResponse], error) {
	return c.updateNativeUserIdentityLink.CallUnary(ctx, req)
}

// DeleteNativeUserIdentityLink calls core.v1.ResourceService.DeleteNativeUserIdentityLink.
func (c *resourceServiceClient) DeleteNativeUserIdentityLink(ctx context.Context, req *connect.Request[v1.DeleteNativeUserIdentityLinkRequest]) (*connect.Response[v1.DeleteNativeUserIdentityLinkResponse], error) {
	return c.deleteNativeUserIdentityLink.CallUnary(ctx, req)
}

// GetDataDiscoveryConfiguration calls core.v1.ResourceService.GetDataDiscoveryConfiguration.
func (c *resourceServiceClient) GetDataDiscoveryConfiguration(ctx context.Context, req *connect.Request[v1.GetDataDiscoveryConfigurationRequest]) (*connect.Response[v1.GetDataDiscoveryConfigurationResponse], error) {
	return c.getDataDiscoveryConfiguration.CallUnary(ctx, req)
}

// CreateDataDiscoveryConfiguration calls core.v1.ResourceService.CreateDataDiscoveryConfiguration.
func (c *resourceServiceClient) CreateDataDiscoveryConfiguration(ctx context.Context, req *connect.Request[v1.CreateDataDiscoveryConfigurationRequest]) (*connect.Response[v1.CreateDataDiscoveryConfigurationResponse], error) {
	return c.createDataDiscoveryConfiguration.CallUnary(ctx, req)
}

// UpdateDataDiscoveryConfiguration calls core.v1.ResourceService.UpdateDataDiscoveryConfiguration.
func (c *resourceServiceClient) UpdateDataDiscoveryConfiguration(ctx context.Context, req *connect.Request[v1.UpdateDataDiscoveryConfigurationRequest]) (*connect.Response[v1.UpdateDataDiscoveryConfigurationResponse], error) {
	return c.updateDataDiscoveryConfiguration.CallUnary(ctx, req)
}

// DeleteDataDiscoveryConfiguration calls core.v1.ResourceService.DeleteDataDiscoveryConfiguration.
func (c *resourceServiceClient) DeleteDataDiscoveryConfiguration(ctx context.Context, req *connect.Request[v1.DeleteDataDiscoveryConfigurationRequest]) (*connect.Response[v1.DeleteDataDiscoveryConfigurationResponse], error) {
	return c.deleteDataDiscoveryConfiguration.CallUnary(ctx, req)
}

// ListDataDiscoveryJobs calls core.v1.ResourceService.ListDataDiscoveryJobs.
func (c *resourceServiceClient) ListDataDiscoveryJobs(ctx context.Context, req *connect.Request[v1.ListDataDiscoveryJobsRequest]) (*connect.Response[v1.ListDataDiscoveryJobsResponse], error) {
	return c.listDataDiscoveryJobs.CallUnary(ctx, req)
}

// CreateResourceHealthCheck calls core.v1.ResourceService.CreateResourceHealthCheck.
func (c *resourceServiceClient) CreateResourceHealthCheck(ctx context.Context, req *connect.Request[v1.CreateResourceHealthCheckRequest]) (*connect.Response[v1.CreateResourceHealthCheckResponse], error) {
	return c.createResourceHealthCheck.CallUnary(ctx, req)
}

// GetResourceHealthCheck calls core.v1.ResourceService.GetResourceHealthCheck.
func (c *resourceServiceClient) GetResourceHealthCheck(ctx context.Context, req *connect.Request[v1.GetResourceHealthCheckRequest]) (*connect.Response[v1.GetResourceHealthCheckResponse], error) {
	return c.getResourceHealthCheck.CallUnary(ctx, req)
}

// UpdateResourceHealthCheck calls core.v1.ResourceService.UpdateResourceHealthCheck.
func (c *resourceServiceClient) UpdateResourceHealthCheck(ctx context.Context, req *connect.Request[v1.UpdateResourceHealthCheckRequest]) (*connect.Response[v1.UpdateResourceHealthCheckResponse], error) {
	return c.updateResourceHealthCheck.CallUnary(ctx, req)
}

// DeleteResourceHealthCheck calls core.v1.ResourceService.DeleteResourceHealthCheck.
func (c *resourceServiceClient) DeleteResourceHealthCheck(ctx context.Context, req *connect.Request[v1.DeleteResourceHealthCheckRequest]) (*connect.Response[v1.DeleteResourceHealthCheckResponse], error) {
	return c.deleteResourceHealthCheck.CallUnary(ctx, req)
}

// GetResourceOwner calls core.v1.ResourceService.GetResourceOwner.
func (c *resourceServiceClient) GetResourceOwner(ctx context.Context, req *connect.Request[v1.GetResourceOwnerRequest]) (*connect.Response[v1.GetResourceOwnerResponse], error) {
	return c.getResourceOwner.CallUnary(ctx, req)
}

// ListResourceOwners calls core.v1.ResourceService.ListResourceOwners.
func (c *resourceServiceClient) ListResourceOwners(ctx context.Context, req *connect.Request[v1.ListResourceOwnersRequest]) (*connect.Response[v1.ListResourceOwnersResponse], error) {
	return c.listResourceOwners.CallUnary(ctx, req)
}

// CreateResourceOwner calls core.v1.ResourceService.CreateResourceOwner.
func (c *resourceServiceClient) CreateResourceOwner(ctx context.Context, req *connect.Request[v1.CreateResourceOwnerRequest]) (*connect.Response[v1.CreateResourceOwnerResponse], error) {
	return c.createResourceOwner.CallUnary(ctx, req)
}

// DeleteResourceOwner calls core.v1.ResourceService.DeleteResourceOwner.
func (c *resourceServiceClient) DeleteResourceOwner(ctx context.Context, req *connect.Request[v1.DeleteResourceOwnerRequest]) (*connect.Response[v1.DeleteResourceOwnerResponse], error) {
	return c.deleteResourceOwner.CallUnary(ctx, req)
}

// ResourceServiceHandler is an implementation of the core.v1.ResourceService service.
type ResourceServiceHandler interface {
	GetResource(context.Context, *connect.Request[v1.GetResourceRequest]) (*connect.Response[v1.GetResourceResponse], error)
	ListResources(context.Context, *connect.Request[v1.ListResourcesRequest]) (*connect.Response[v1.ListResourcesResponse], error)
	CreateResource(context.Context, *connect.Request[v1.CreateResourceRequest]) (*connect.Response[v1.CreateResourceResponse], error)
	UpdateResource(context.Context, *connect.Request[v1.UpdateResourceRequest]) (*connect.Response[v1.UpdateResourceResponse], error)
	DeleteResource(context.Context, *connect.Request[v1.DeleteResourceRequest]) (*connect.Response[v1.DeleteResourceResponse], error)
	CreateNativeUser(context.Context, *connect.Request[v1.CreateNativeUserRequest]) (*connect.Response[v1.CreateNativeUserResponse], error)
	GetNativeUser(context.Context, *connect.Request[v1.GetNativeUserRequest]) (*connect.Response[v1.GetNativeUserResponse], error)
	ListNativeUsers(context.Context, *connect.Request[v1.ListNativeUsersRequest]) (*connect.Response[v1.ListNativeUsersResponse], error)
	DeleteNativeUser(context.Context, *connect.Request[v1.DeleteNativeUserRequest]) (*connect.Response[v1.DeleteNativeUserResponse], error)
	UpdateNativeUser(context.Context, *connect.Request[v1.UpdateNativeUserRequest]) (*connect.Response[v1.UpdateNativeUserResponse], error)
	CreateNativeUserIdentityLink(context.Context, *connect.Request[v1.CreateNativeUserIdentityLinkRequest]) (*connect.Response[v1.CreateNativeUserIdentityLinkResponse], error)
	GetNativeUserIdentityLink(context.Context, *connect.Request[v1.GetNativeUserIdentityLinkRequest]) (*connect.Response[v1.GetNativeUserIdentityLinkResponse], error)
	ListNativeUserIdentityLinks(context.Context, *connect.Request[v1.ListNativeUserIdentityLinksRequest]) (*connect.Response[v1.ListNativeUserIdentityLinksResponse], error)
	UpdateNativeUserIdentityLink(context.Context, *connect.Request[v1.UpdateNativeUserIdentityLinkRequest]) (*connect.Response[v1.UpdateNativeUserIdentityLinkResponse], error)
	DeleteNativeUserIdentityLink(context.Context, *connect.Request[v1.DeleteNativeUserIdentityLinkRequest]) (*connect.Response[v1.DeleteNativeUserIdentityLinkResponse], error)
	GetDataDiscoveryConfiguration(context.Context, *connect.Request[v1.GetDataDiscoveryConfigurationRequest]) (*connect.Response[v1.GetDataDiscoveryConfigurationResponse], error)
	CreateDataDiscoveryConfiguration(context.Context, *connect.Request[v1.CreateDataDiscoveryConfigurationRequest]) (*connect.Response[v1.CreateDataDiscoveryConfigurationResponse], error)
	UpdateDataDiscoveryConfiguration(context.Context, *connect.Request[v1.UpdateDataDiscoveryConfigurationRequest]) (*connect.Response[v1.UpdateDataDiscoveryConfigurationResponse], error)
	DeleteDataDiscoveryConfiguration(context.Context, *connect.Request[v1.DeleteDataDiscoveryConfigurationRequest]) (*connect.Response[v1.DeleteDataDiscoveryConfigurationResponse], error)
	ListDataDiscoveryJobs(context.Context, *connect.Request[v1.ListDataDiscoveryJobsRequest]) (*connect.Response[v1.ListDataDiscoveryJobsResponse], error)
	CreateResourceHealthCheck(context.Context, *connect.Request[v1.CreateResourceHealthCheckRequest]) (*connect.Response[v1.CreateResourceHealthCheckResponse], error)
	GetResourceHealthCheck(context.Context, *connect.Request[v1.GetResourceHealthCheckRequest]) (*connect.Response[v1.GetResourceHealthCheckResponse], error)
	UpdateResourceHealthCheck(context.Context, *connect.Request[v1.UpdateResourceHealthCheckRequest]) (*connect.Response[v1.UpdateResourceHealthCheckResponse], error)
	DeleteResourceHealthCheck(context.Context, *connect.Request[v1.DeleteResourceHealthCheckRequest]) (*connect.Response[v1.DeleteResourceHealthCheckResponse], error)
	// Owners
	GetResourceOwner(context.Context, *connect.Request[v1.GetResourceOwnerRequest]) (*connect.Response[v1.GetResourceOwnerResponse], error)
	ListResourceOwners(context.Context, *connect.Request[v1.ListResourceOwnersRequest]) (*connect.Response[v1.ListResourceOwnersResponse], error)
	CreateResourceOwner(context.Context, *connect.Request[v1.CreateResourceOwnerRequest]) (*connect.Response[v1.CreateResourceOwnerResponse], error)
	DeleteResourceOwner(context.Context, *connect.Request[v1.DeleteResourceOwnerRequest]) (*connect.Response[v1.DeleteResourceOwnerResponse], error)
}

// NewResourceServiceHandler builds an HTTP handler from the service implementation. It returns the
// path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewResourceServiceHandler(svc ResourceServiceHandler, opts ...connect.HandlerOption) (string, http.Handler) {
	resourceServiceGetResourceHandler := connect.NewUnaryHandler(
		ResourceServiceGetResourceProcedure,
		svc.GetResource,
		connect.WithSchema(resourceServiceGetResourceMethodDescriptor),
		connect.WithIdempotency(connect.IdempotencyNoSideEffects),
		connect.WithHandlerOptions(opts...),
	)
	resourceServiceListResourcesHandler := connect.NewUnaryHandler(
		ResourceServiceListResourcesProcedure,
		svc.ListResources,
		connect.WithSchema(resourceServiceListResourcesMethodDescriptor),
		connect.WithIdempotency(connect.IdempotencyNoSideEffects),
		connect.WithHandlerOptions(opts...),
	)
	resourceServiceCreateResourceHandler := connect.NewUnaryHandler(
		ResourceServiceCreateResourceProcedure,
		svc.CreateResource,
		connect.WithSchema(resourceServiceCreateResourceMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	resourceServiceUpdateResourceHandler := connect.NewUnaryHandler(
		ResourceServiceUpdateResourceProcedure,
		svc.UpdateResource,
		connect.WithSchema(resourceServiceUpdateResourceMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	resourceServiceDeleteResourceHandler := connect.NewUnaryHandler(
		ResourceServiceDeleteResourceProcedure,
		svc.DeleteResource,
		connect.WithSchema(resourceServiceDeleteResourceMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	resourceServiceCreateNativeUserHandler := connect.NewUnaryHandler(
		ResourceServiceCreateNativeUserProcedure,
		svc.CreateNativeUser,
		connect.WithSchema(resourceServiceCreateNativeUserMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	resourceServiceGetNativeUserHandler := connect.NewUnaryHandler(
		ResourceServiceGetNativeUserProcedure,
		svc.GetNativeUser,
		connect.WithSchema(resourceServiceGetNativeUserMethodDescriptor),
		connect.WithIdempotency(connect.IdempotencyNoSideEffects),
		connect.WithHandlerOptions(opts...),
	)
	resourceServiceListNativeUsersHandler := connect.NewUnaryHandler(
		ResourceServiceListNativeUsersProcedure,
		svc.ListNativeUsers,
		connect.WithSchema(resourceServiceListNativeUsersMethodDescriptor),
		connect.WithIdempotency(connect.IdempotencyNoSideEffects),
		connect.WithHandlerOptions(opts...),
	)
	resourceServiceDeleteNativeUserHandler := connect.NewUnaryHandler(
		ResourceServiceDeleteNativeUserProcedure,
		svc.DeleteNativeUser,
		connect.WithSchema(resourceServiceDeleteNativeUserMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	resourceServiceUpdateNativeUserHandler := connect.NewUnaryHandler(
		ResourceServiceUpdateNativeUserProcedure,
		svc.UpdateNativeUser,
		connect.WithSchema(resourceServiceUpdateNativeUserMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	resourceServiceCreateNativeUserIdentityLinkHandler := connect.NewUnaryHandler(
		ResourceServiceCreateNativeUserIdentityLinkProcedure,
		svc.CreateNativeUserIdentityLink,
		connect.WithSchema(resourceServiceCreateNativeUserIdentityLinkMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	resourceServiceGetNativeUserIdentityLinkHandler := connect.NewUnaryHandler(
		ResourceServiceGetNativeUserIdentityLinkProcedure,
		svc.GetNativeUserIdentityLink,
		connect.WithSchema(resourceServiceGetNativeUserIdentityLinkMethodDescriptor),
		connect.WithIdempotency(connect.IdempotencyNoSideEffects),
		connect.WithHandlerOptions(opts...),
	)
	resourceServiceListNativeUserIdentityLinksHandler := connect.NewUnaryHandler(
		ResourceServiceListNativeUserIdentityLinksProcedure,
		svc.ListNativeUserIdentityLinks,
		connect.WithSchema(resourceServiceListNativeUserIdentityLinksMethodDescriptor),
		connect.WithIdempotency(connect.IdempotencyNoSideEffects),
		connect.WithHandlerOptions(opts...),
	)
	resourceServiceUpdateNativeUserIdentityLinkHandler := connect.NewUnaryHandler(
		ResourceServiceUpdateNativeUserIdentityLinkProcedure,
		svc.UpdateNativeUserIdentityLink,
		connect.WithSchema(resourceServiceUpdateNativeUserIdentityLinkMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	resourceServiceDeleteNativeUserIdentityLinkHandler := connect.NewUnaryHandler(
		ResourceServiceDeleteNativeUserIdentityLinkProcedure,
		svc.DeleteNativeUserIdentityLink,
		connect.WithSchema(resourceServiceDeleteNativeUserIdentityLinkMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	resourceServiceGetDataDiscoveryConfigurationHandler := connect.NewUnaryHandler(
		ResourceServiceGetDataDiscoveryConfigurationProcedure,
		svc.GetDataDiscoveryConfiguration,
		connect.WithSchema(resourceServiceGetDataDiscoveryConfigurationMethodDescriptor),
		connect.WithIdempotency(connect.IdempotencyNoSideEffects),
		connect.WithHandlerOptions(opts...),
	)
	resourceServiceCreateDataDiscoveryConfigurationHandler := connect.NewUnaryHandler(
		ResourceServiceCreateDataDiscoveryConfigurationProcedure,
		svc.CreateDataDiscoveryConfiguration,
		connect.WithSchema(resourceServiceCreateDataDiscoveryConfigurationMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	resourceServiceUpdateDataDiscoveryConfigurationHandler := connect.NewUnaryHandler(
		ResourceServiceUpdateDataDiscoveryConfigurationProcedure,
		svc.UpdateDataDiscoveryConfiguration,
		connect.WithSchema(resourceServiceUpdateDataDiscoveryConfigurationMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	resourceServiceDeleteDataDiscoveryConfigurationHandler := connect.NewUnaryHandler(
		ResourceServiceDeleteDataDiscoveryConfigurationProcedure,
		svc.DeleteDataDiscoveryConfiguration,
		connect.WithSchema(resourceServiceDeleteDataDiscoveryConfigurationMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	resourceServiceListDataDiscoveryJobsHandler := connect.NewUnaryHandler(
		ResourceServiceListDataDiscoveryJobsProcedure,
		svc.ListDataDiscoveryJobs,
		connect.WithSchema(resourceServiceListDataDiscoveryJobsMethodDescriptor),
		connect.WithIdempotency(connect.IdempotencyNoSideEffects),
		connect.WithHandlerOptions(opts...),
	)
	resourceServiceCreateResourceHealthCheckHandler := connect.NewUnaryHandler(
		ResourceServiceCreateResourceHealthCheckProcedure,
		svc.CreateResourceHealthCheck,
		connect.WithSchema(resourceServiceCreateResourceHealthCheckMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	resourceServiceGetResourceHealthCheckHandler := connect.NewUnaryHandler(
		ResourceServiceGetResourceHealthCheckProcedure,
		svc.GetResourceHealthCheck,
		connect.WithSchema(resourceServiceGetResourceHealthCheckMethodDescriptor),
		connect.WithIdempotency(connect.IdempotencyNoSideEffects),
		connect.WithHandlerOptions(opts...),
	)
	resourceServiceUpdateResourceHealthCheckHandler := connect.NewUnaryHandler(
		ResourceServiceUpdateResourceHealthCheckProcedure,
		svc.UpdateResourceHealthCheck,
		connect.WithSchema(resourceServiceUpdateResourceHealthCheckMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	resourceServiceDeleteResourceHealthCheckHandler := connect.NewUnaryHandler(
		ResourceServiceDeleteResourceHealthCheckProcedure,
		svc.DeleteResourceHealthCheck,
		connect.WithSchema(resourceServiceDeleteResourceHealthCheckMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	resourceServiceGetResourceOwnerHandler := connect.NewUnaryHandler(
		ResourceServiceGetResourceOwnerProcedure,
		svc.GetResourceOwner,
		connect.WithSchema(resourceServiceGetResourceOwnerMethodDescriptor),
		connect.WithIdempotency(connect.IdempotencyNoSideEffects),
		connect.WithHandlerOptions(opts...),
	)
	resourceServiceListResourceOwnersHandler := connect.NewUnaryHandler(
		ResourceServiceListResourceOwnersProcedure,
		svc.ListResourceOwners,
		connect.WithSchema(resourceServiceListResourceOwnersMethodDescriptor),
		connect.WithIdempotency(connect.IdempotencyNoSideEffects),
		connect.WithHandlerOptions(opts...),
	)
	resourceServiceCreateResourceOwnerHandler := connect.NewUnaryHandler(
		ResourceServiceCreateResourceOwnerProcedure,
		svc.CreateResourceOwner,
		connect.WithSchema(resourceServiceCreateResourceOwnerMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	resourceServiceDeleteResourceOwnerHandler := connect.NewUnaryHandler(
		ResourceServiceDeleteResourceOwnerProcedure,
		svc.DeleteResourceOwner,
		connect.WithSchema(resourceServiceDeleteResourceOwnerMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	return "/core.v1.ResourceService/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case ResourceServiceGetResourceProcedure:
			resourceServiceGetResourceHandler.ServeHTTP(w, r)
		case ResourceServiceListResourcesProcedure:
			resourceServiceListResourcesHandler.ServeHTTP(w, r)
		case ResourceServiceCreateResourceProcedure:
			resourceServiceCreateResourceHandler.ServeHTTP(w, r)
		case ResourceServiceUpdateResourceProcedure:
			resourceServiceUpdateResourceHandler.ServeHTTP(w, r)
		case ResourceServiceDeleteResourceProcedure:
			resourceServiceDeleteResourceHandler.ServeHTTP(w, r)
		case ResourceServiceCreateNativeUserProcedure:
			resourceServiceCreateNativeUserHandler.ServeHTTP(w, r)
		case ResourceServiceGetNativeUserProcedure:
			resourceServiceGetNativeUserHandler.ServeHTTP(w, r)
		case ResourceServiceListNativeUsersProcedure:
			resourceServiceListNativeUsersHandler.ServeHTTP(w, r)
		case ResourceServiceDeleteNativeUserProcedure:
			resourceServiceDeleteNativeUserHandler.ServeHTTP(w, r)
		case ResourceServiceUpdateNativeUserProcedure:
			resourceServiceUpdateNativeUserHandler.ServeHTTP(w, r)
		case ResourceServiceCreateNativeUserIdentityLinkProcedure:
			resourceServiceCreateNativeUserIdentityLinkHandler.ServeHTTP(w, r)
		case ResourceServiceGetNativeUserIdentityLinkProcedure:
			resourceServiceGetNativeUserIdentityLinkHandler.ServeHTTP(w, r)
		case ResourceServiceListNativeUserIdentityLinksProcedure:
			resourceServiceListNativeUserIdentityLinksHandler.ServeHTTP(w, r)
		case ResourceServiceUpdateNativeUserIdentityLinkProcedure:
			resourceServiceUpdateNativeUserIdentityLinkHandler.ServeHTTP(w, r)
		case ResourceServiceDeleteNativeUserIdentityLinkProcedure:
			resourceServiceDeleteNativeUserIdentityLinkHandler.ServeHTTP(w, r)
		case ResourceServiceGetDataDiscoveryConfigurationProcedure:
			resourceServiceGetDataDiscoveryConfigurationHandler.ServeHTTP(w, r)
		case ResourceServiceCreateDataDiscoveryConfigurationProcedure:
			resourceServiceCreateDataDiscoveryConfigurationHandler.ServeHTTP(w, r)
		case ResourceServiceUpdateDataDiscoveryConfigurationProcedure:
			resourceServiceUpdateDataDiscoveryConfigurationHandler.ServeHTTP(w, r)
		case ResourceServiceDeleteDataDiscoveryConfigurationProcedure:
			resourceServiceDeleteDataDiscoveryConfigurationHandler.ServeHTTP(w, r)
		case ResourceServiceListDataDiscoveryJobsProcedure:
			resourceServiceListDataDiscoveryJobsHandler.ServeHTTP(w, r)
		case ResourceServiceCreateResourceHealthCheckProcedure:
			resourceServiceCreateResourceHealthCheckHandler.ServeHTTP(w, r)
		case ResourceServiceGetResourceHealthCheckProcedure:
			resourceServiceGetResourceHealthCheckHandler.ServeHTTP(w, r)
		case ResourceServiceUpdateResourceHealthCheckProcedure:
			resourceServiceUpdateResourceHealthCheckHandler.ServeHTTP(w, r)
		case ResourceServiceDeleteResourceHealthCheckProcedure:
			resourceServiceDeleteResourceHealthCheckHandler.ServeHTTP(w, r)
		case ResourceServiceGetResourceOwnerProcedure:
			resourceServiceGetResourceOwnerHandler.ServeHTTP(w, r)
		case ResourceServiceListResourceOwnersProcedure:
			resourceServiceListResourceOwnersHandler.ServeHTTP(w, r)
		case ResourceServiceCreateResourceOwnerProcedure:
			resourceServiceCreateResourceOwnerHandler.ServeHTTP(w, r)
		case ResourceServiceDeleteResourceOwnerProcedure:
			resourceServiceDeleteResourceOwnerHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedResourceServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedResourceServiceHandler struct{}

func (UnimplementedResourceServiceHandler) GetResource(context.Context, *connect.Request[v1.GetResourceRequest]) (*connect.Response[v1.GetResourceResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("core.v1.ResourceService.GetResource is not implemented"))
}

func (UnimplementedResourceServiceHandler) ListResources(context.Context, *connect.Request[v1.ListResourcesRequest]) (*connect.Response[v1.ListResourcesResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("core.v1.ResourceService.ListResources is not implemented"))
}

func (UnimplementedResourceServiceHandler) CreateResource(context.Context, *connect.Request[v1.CreateResourceRequest]) (*connect.Response[v1.CreateResourceResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("core.v1.ResourceService.CreateResource is not implemented"))
}

func (UnimplementedResourceServiceHandler) UpdateResource(context.Context, *connect.Request[v1.UpdateResourceRequest]) (*connect.Response[v1.UpdateResourceResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("core.v1.ResourceService.UpdateResource is not implemented"))
}

func (UnimplementedResourceServiceHandler) DeleteResource(context.Context, *connect.Request[v1.DeleteResourceRequest]) (*connect.Response[v1.DeleteResourceResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("core.v1.ResourceService.DeleteResource is not implemented"))
}

func (UnimplementedResourceServiceHandler) CreateNativeUser(context.Context, *connect.Request[v1.CreateNativeUserRequest]) (*connect.Response[v1.CreateNativeUserResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("core.v1.ResourceService.CreateNativeUser is not implemented"))
}

func (UnimplementedResourceServiceHandler) GetNativeUser(context.Context, *connect.Request[v1.GetNativeUserRequest]) (*connect.Response[v1.GetNativeUserResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("core.v1.ResourceService.GetNativeUser is not implemented"))
}

func (UnimplementedResourceServiceHandler) ListNativeUsers(context.Context, *connect.Request[v1.ListNativeUsersRequest]) (*connect.Response[v1.ListNativeUsersResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("core.v1.ResourceService.ListNativeUsers is not implemented"))
}

func (UnimplementedResourceServiceHandler) DeleteNativeUser(context.Context, *connect.Request[v1.DeleteNativeUserRequest]) (*connect.Response[v1.DeleteNativeUserResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("core.v1.ResourceService.DeleteNativeUser is not implemented"))
}

func (UnimplementedResourceServiceHandler) UpdateNativeUser(context.Context, *connect.Request[v1.UpdateNativeUserRequest]) (*connect.Response[v1.UpdateNativeUserResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("core.v1.ResourceService.UpdateNativeUser is not implemented"))
}

func (UnimplementedResourceServiceHandler) CreateNativeUserIdentityLink(context.Context, *connect.Request[v1.CreateNativeUserIdentityLinkRequest]) (*connect.Response[v1.CreateNativeUserIdentityLinkResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("core.v1.ResourceService.CreateNativeUserIdentityLink is not implemented"))
}

func (UnimplementedResourceServiceHandler) GetNativeUserIdentityLink(context.Context, *connect.Request[v1.GetNativeUserIdentityLinkRequest]) (*connect.Response[v1.GetNativeUserIdentityLinkResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("core.v1.ResourceService.GetNativeUserIdentityLink is not implemented"))
}

func (UnimplementedResourceServiceHandler) ListNativeUserIdentityLinks(context.Context, *connect.Request[v1.ListNativeUserIdentityLinksRequest]) (*connect.Response[v1.ListNativeUserIdentityLinksResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("core.v1.ResourceService.ListNativeUserIdentityLinks is not implemented"))
}

func (UnimplementedResourceServiceHandler) UpdateNativeUserIdentityLink(context.Context, *connect.Request[v1.UpdateNativeUserIdentityLinkRequest]) (*connect.Response[v1.UpdateNativeUserIdentityLinkResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("core.v1.ResourceService.UpdateNativeUserIdentityLink is not implemented"))
}

func (UnimplementedResourceServiceHandler) DeleteNativeUserIdentityLink(context.Context, *connect.Request[v1.DeleteNativeUserIdentityLinkRequest]) (*connect.Response[v1.DeleteNativeUserIdentityLinkResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("core.v1.ResourceService.DeleteNativeUserIdentityLink is not implemented"))
}

func (UnimplementedResourceServiceHandler) GetDataDiscoveryConfiguration(context.Context, *connect.Request[v1.GetDataDiscoveryConfigurationRequest]) (*connect.Response[v1.GetDataDiscoveryConfigurationResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("core.v1.ResourceService.GetDataDiscoveryConfiguration is not implemented"))
}

func (UnimplementedResourceServiceHandler) CreateDataDiscoveryConfiguration(context.Context, *connect.Request[v1.CreateDataDiscoveryConfigurationRequest]) (*connect.Response[v1.CreateDataDiscoveryConfigurationResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("core.v1.ResourceService.CreateDataDiscoveryConfiguration is not implemented"))
}

func (UnimplementedResourceServiceHandler) UpdateDataDiscoveryConfiguration(context.Context, *connect.Request[v1.UpdateDataDiscoveryConfigurationRequest]) (*connect.Response[v1.UpdateDataDiscoveryConfigurationResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("core.v1.ResourceService.UpdateDataDiscoveryConfiguration is not implemented"))
}

func (UnimplementedResourceServiceHandler) DeleteDataDiscoveryConfiguration(context.Context, *connect.Request[v1.DeleteDataDiscoveryConfigurationRequest]) (*connect.Response[v1.DeleteDataDiscoveryConfigurationResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("core.v1.ResourceService.DeleteDataDiscoveryConfiguration is not implemented"))
}

func (UnimplementedResourceServiceHandler) ListDataDiscoveryJobs(context.Context, *connect.Request[v1.ListDataDiscoveryJobsRequest]) (*connect.Response[v1.ListDataDiscoveryJobsResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("core.v1.ResourceService.ListDataDiscoveryJobs is not implemented"))
}

func (UnimplementedResourceServiceHandler) CreateResourceHealthCheck(context.Context, *connect.Request[v1.CreateResourceHealthCheckRequest]) (*connect.Response[v1.CreateResourceHealthCheckResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("core.v1.ResourceService.CreateResourceHealthCheck is not implemented"))
}

func (UnimplementedResourceServiceHandler) GetResourceHealthCheck(context.Context, *connect.Request[v1.GetResourceHealthCheckRequest]) (*connect.Response[v1.GetResourceHealthCheckResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("core.v1.ResourceService.GetResourceHealthCheck is not implemented"))
}

func (UnimplementedResourceServiceHandler) UpdateResourceHealthCheck(context.Context, *connect.Request[v1.UpdateResourceHealthCheckRequest]) (*connect.Response[v1.UpdateResourceHealthCheckResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("core.v1.ResourceService.UpdateResourceHealthCheck is not implemented"))
}

func (UnimplementedResourceServiceHandler) DeleteResourceHealthCheck(context.Context, *connect.Request[v1.DeleteResourceHealthCheckRequest]) (*connect.Response[v1.DeleteResourceHealthCheckResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("core.v1.ResourceService.DeleteResourceHealthCheck is not implemented"))
}

func (UnimplementedResourceServiceHandler) GetResourceOwner(context.Context, *connect.Request[v1.GetResourceOwnerRequest]) (*connect.Response[v1.GetResourceOwnerResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("core.v1.ResourceService.GetResourceOwner is not implemented"))
}

func (UnimplementedResourceServiceHandler) ListResourceOwners(context.Context, *connect.Request[v1.ListResourceOwnersRequest]) (*connect.Response[v1.ListResourceOwnersResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("core.v1.ResourceService.ListResourceOwners is not implemented"))
}

func (UnimplementedResourceServiceHandler) CreateResourceOwner(context.Context, *connect.Request[v1.CreateResourceOwnerRequest]) (*connect.Response[v1.CreateResourceOwnerResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("core.v1.ResourceService.CreateResourceOwner is not implemented"))
}

func (UnimplementedResourceServiceHandler) DeleteResourceOwner(context.Context, *connect.Request[v1.DeleteResourceOwnerRequest]) (*connect.Response[v1.DeleteResourceOwnerResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("core.v1.ResourceService.DeleteResourceOwner is not implemented"))
}
