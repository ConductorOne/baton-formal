// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: core/v1/integration_bi.proto

package corev1connect

import (
	v1 "buf.build/gen/go/formal/core/protocolbuffers/go/core/v1"
	connect "connectrpc.com/connect"
	context "context"
	errors "errors"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect.IsAtLeastVersion1_13_0

const (
	// IntegrationBIServiceName is the fully-qualified name of the IntegrationBIService service.
	IntegrationBIServiceName = "core.v1.IntegrationBIService"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// IntegrationBIServiceRefreshBIIntegrationsProcedure is the fully-qualified name of the
	// IntegrationBIService's RefreshBIIntegrations RPC.
	IntegrationBIServiceRefreshBIIntegrationsProcedure = "/core.v1.IntegrationBIService/RefreshBIIntegrations"
	// IntegrationBIServiceListBIIntegrationsProcedure is the fully-qualified name of the
	// IntegrationBIService's ListBIIntegrations RPC.
	IntegrationBIServiceListBIIntegrationsProcedure = "/core.v1.IntegrationBIService/ListBIIntegrations"
	// IntegrationBIServiceGetBIIntegrationProcedure is the fully-qualified name of the
	// IntegrationBIService's GetBIIntegration RPC.
	IntegrationBIServiceGetBIIntegrationProcedure = "/core.v1.IntegrationBIService/GetBIIntegration"
	// IntegrationBIServiceCreateBIIntegrationProcedure is the fully-qualified name of the
	// IntegrationBIService's CreateBIIntegration RPC.
	IntegrationBIServiceCreateBIIntegrationProcedure = "/core.v1.IntegrationBIService/CreateBIIntegration"
	// IntegrationBIServiceDeleteBIIntegrationProcedure is the fully-qualified name of the
	// IntegrationBIService's DeleteBIIntegration RPC.
	IntegrationBIServiceDeleteBIIntegrationProcedure = "/core.v1.IntegrationBIService/DeleteBIIntegration"
)

// These variables are the protoreflect.Descriptor objects for the RPCs defined in this package.
var (
	integrationBIServiceServiceDescriptor                     = v1.File_core_v1_integration_bi_proto.Services().ByName("IntegrationBIService")
	integrationBIServiceRefreshBIIntegrationsMethodDescriptor = integrationBIServiceServiceDescriptor.Methods().ByName("RefreshBIIntegrations")
	integrationBIServiceListBIIntegrationsMethodDescriptor    = integrationBIServiceServiceDescriptor.Methods().ByName("ListBIIntegrations")
	integrationBIServiceGetBIIntegrationMethodDescriptor      = integrationBIServiceServiceDescriptor.Methods().ByName("GetBIIntegration")
	integrationBIServiceCreateBIIntegrationMethodDescriptor   = integrationBIServiceServiceDescriptor.Methods().ByName("CreateBIIntegration")
	integrationBIServiceDeleteBIIntegrationMethodDescriptor   = integrationBIServiceServiceDescriptor.Methods().ByName("DeleteBIIntegration")
)

// IntegrationBIServiceClient is a client for the core.v1.IntegrationBIService service.
type IntegrationBIServiceClient interface {
	RefreshBIIntegrations(context.Context, *connect.Request[v1.RefreshBIIntegrationsRequest]) (*connect.Response[v1.RefreshBIIntegrationsResponse], error)
	ListBIIntegrations(context.Context, *connect.Request[v1.ListBIIntegrationsRequest]) (*connect.Response[v1.ListBIIntegrationsResponse], error)
	GetBIIntegration(context.Context, *connect.Request[v1.GetBIIntegrationRequest]) (*connect.Response[v1.GetBIIntegrationResponse], error)
	CreateBIIntegration(context.Context, *connect.Request[v1.CreateBIIntegrationRequest]) (*connect.Response[v1.CreateBIIntegrationResponse], error)
	DeleteBIIntegration(context.Context, *connect.Request[v1.DeleteBIIntegrationRequest]) (*connect.Response[v1.DeleteBIIntegrationResponse], error)
}

// NewIntegrationBIServiceClient constructs a client for the core.v1.IntegrationBIService service.
// By default, it uses the Connect protocol with the binary Protobuf Codec, asks for gzipped
// responses, and sends uncompressed requests. To use the gRPC or gRPC-Web protocols, supply the
// connect.WithGRPC() or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewIntegrationBIServiceClient(httpClient connect.HTTPClient, baseURL string, opts ...connect.ClientOption) IntegrationBIServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &integrationBIServiceClient{
		refreshBIIntegrations: connect.NewClient[v1.RefreshBIIntegrationsRequest, v1.RefreshBIIntegrationsResponse](
			httpClient,
			baseURL+IntegrationBIServiceRefreshBIIntegrationsProcedure,
			connect.WithSchema(integrationBIServiceRefreshBIIntegrationsMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		listBIIntegrations: connect.NewClient[v1.ListBIIntegrationsRequest, v1.ListBIIntegrationsResponse](
			httpClient,
			baseURL+IntegrationBIServiceListBIIntegrationsProcedure,
			connect.WithSchema(integrationBIServiceListBIIntegrationsMethodDescriptor),
			connect.WithIdempotency(connect.IdempotencyNoSideEffects),
			connect.WithClientOptions(opts...),
		),
		getBIIntegration: connect.NewClient[v1.GetBIIntegrationRequest, v1.GetBIIntegrationResponse](
			httpClient,
			baseURL+IntegrationBIServiceGetBIIntegrationProcedure,
			connect.WithSchema(integrationBIServiceGetBIIntegrationMethodDescriptor),
			connect.WithIdempotency(connect.IdempotencyNoSideEffects),
			connect.WithClientOptions(opts...),
		),
		createBIIntegration: connect.NewClient[v1.CreateBIIntegrationRequest, v1.CreateBIIntegrationResponse](
			httpClient,
			baseURL+IntegrationBIServiceCreateBIIntegrationProcedure,
			connect.WithSchema(integrationBIServiceCreateBIIntegrationMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		deleteBIIntegration: connect.NewClient[v1.DeleteBIIntegrationRequest, v1.DeleteBIIntegrationResponse](
			httpClient,
			baseURL+IntegrationBIServiceDeleteBIIntegrationProcedure,
			connect.WithSchema(integrationBIServiceDeleteBIIntegrationMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
	}
}

// integrationBIServiceClient implements IntegrationBIServiceClient.
type integrationBIServiceClient struct {
	refreshBIIntegrations *connect.Client[v1.RefreshBIIntegrationsRequest, v1.RefreshBIIntegrationsResponse]
	listBIIntegrations    *connect.Client[v1.ListBIIntegrationsRequest, v1.ListBIIntegrationsResponse]
	getBIIntegration      *connect.Client[v1.GetBIIntegrationRequest, v1.GetBIIntegrationResponse]
	createBIIntegration   *connect.Client[v1.CreateBIIntegrationRequest, v1.CreateBIIntegrationResponse]
	deleteBIIntegration   *connect.Client[v1.DeleteBIIntegrationRequest, v1.DeleteBIIntegrationResponse]
}

// RefreshBIIntegrations calls core.v1.IntegrationBIService.RefreshBIIntegrations.
func (c *integrationBIServiceClient) RefreshBIIntegrations(ctx context.Context, req *connect.Request[v1.RefreshBIIntegrationsRequest]) (*connect.Response[v1.RefreshBIIntegrationsResponse], error) {
	return c.refreshBIIntegrations.CallUnary(ctx, req)
}

// ListBIIntegrations calls core.v1.IntegrationBIService.ListBIIntegrations.
func (c *integrationBIServiceClient) ListBIIntegrations(ctx context.Context, req *connect.Request[v1.ListBIIntegrationsRequest]) (*connect.Response[v1.ListBIIntegrationsResponse], error) {
	return c.listBIIntegrations.CallUnary(ctx, req)
}

// GetBIIntegration calls core.v1.IntegrationBIService.GetBIIntegration.
func (c *integrationBIServiceClient) GetBIIntegration(ctx context.Context, req *connect.Request[v1.GetBIIntegrationRequest]) (*connect.Response[v1.GetBIIntegrationResponse], error) {
	return c.getBIIntegration.CallUnary(ctx, req)
}

// CreateBIIntegration calls core.v1.IntegrationBIService.CreateBIIntegration.
func (c *integrationBIServiceClient) CreateBIIntegration(ctx context.Context, req *connect.Request[v1.CreateBIIntegrationRequest]) (*connect.Response[v1.CreateBIIntegrationResponse], error) {
	return c.createBIIntegration.CallUnary(ctx, req)
}

// DeleteBIIntegration calls core.v1.IntegrationBIService.DeleteBIIntegration.
func (c *integrationBIServiceClient) DeleteBIIntegration(ctx context.Context, req *connect.Request[v1.DeleteBIIntegrationRequest]) (*connect.Response[v1.DeleteBIIntegrationResponse], error) {
	return c.deleteBIIntegration.CallUnary(ctx, req)
}

// IntegrationBIServiceHandler is an implementation of the core.v1.IntegrationBIService service.
type IntegrationBIServiceHandler interface {
	RefreshBIIntegrations(context.Context, *connect.Request[v1.RefreshBIIntegrationsRequest]) (*connect.Response[v1.RefreshBIIntegrationsResponse], error)
	ListBIIntegrations(context.Context, *connect.Request[v1.ListBIIntegrationsRequest]) (*connect.Response[v1.ListBIIntegrationsResponse], error)
	GetBIIntegration(context.Context, *connect.Request[v1.GetBIIntegrationRequest]) (*connect.Response[v1.GetBIIntegrationResponse], error)
	CreateBIIntegration(context.Context, *connect.Request[v1.CreateBIIntegrationRequest]) (*connect.Response[v1.CreateBIIntegrationResponse], error)
	DeleteBIIntegration(context.Context, *connect.Request[v1.DeleteBIIntegrationRequest]) (*connect.Response[v1.DeleteBIIntegrationResponse], error)
}

// NewIntegrationBIServiceHandler builds an HTTP handler from the service implementation. It returns
// the path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewIntegrationBIServiceHandler(svc IntegrationBIServiceHandler, opts ...connect.HandlerOption) (string, http.Handler) {
	integrationBIServiceRefreshBIIntegrationsHandler := connect.NewUnaryHandler(
		IntegrationBIServiceRefreshBIIntegrationsProcedure,
		svc.RefreshBIIntegrations,
		connect.WithSchema(integrationBIServiceRefreshBIIntegrationsMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	integrationBIServiceListBIIntegrationsHandler := connect.NewUnaryHandler(
		IntegrationBIServiceListBIIntegrationsProcedure,
		svc.ListBIIntegrations,
		connect.WithSchema(integrationBIServiceListBIIntegrationsMethodDescriptor),
		connect.WithIdempotency(connect.IdempotencyNoSideEffects),
		connect.WithHandlerOptions(opts...),
	)
	integrationBIServiceGetBIIntegrationHandler := connect.NewUnaryHandler(
		IntegrationBIServiceGetBIIntegrationProcedure,
		svc.GetBIIntegration,
		connect.WithSchema(integrationBIServiceGetBIIntegrationMethodDescriptor),
		connect.WithIdempotency(connect.IdempotencyNoSideEffects),
		connect.WithHandlerOptions(opts...),
	)
	integrationBIServiceCreateBIIntegrationHandler := connect.NewUnaryHandler(
		IntegrationBIServiceCreateBIIntegrationProcedure,
		svc.CreateBIIntegration,
		connect.WithSchema(integrationBIServiceCreateBIIntegrationMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	integrationBIServiceDeleteBIIntegrationHandler := connect.NewUnaryHandler(
		IntegrationBIServiceDeleteBIIntegrationProcedure,
		svc.DeleteBIIntegration,
		connect.WithSchema(integrationBIServiceDeleteBIIntegrationMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	return "/core.v1.IntegrationBIService/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case IntegrationBIServiceRefreshBIIntegrationsProcedure:
			integrationBIServiceRefreshBIIntegrationsHandler.ServeHTTP(w, r)
		case IntegrationBIServiceListBIIntegrationsProcedure:
			integrationBIServiceListBIIntegrationsHandler.ServeHTTP(w, r)
		case IntegrationBIServiceGetBIIntegrationProcedure:
			integrationBIServiceGetBIIntegrationHandler.ServeHTTP(w, r)
		case IntegrationBIServiceCreateBIIntegrationProcedure:
			integrationBIServiceCreateBIIntegrationHandler.ServeHTTP(w, r)
		case IntegrationBIServiceDeleteBIIntegrationProcedure:
			integrationBIServiceDeleteBIIntegrationHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedIntegrationBIServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedIntegrationBIServiceHandler struct{}

func (UnimplementedIntegrationBIServiceHandler) RefreshBIIntegrations(context.Context, *connect.Request[v1.RefreshBIIntegrationsRequest]) (*connect.Response[v1.RefreshBIIntegrationsResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("core.v1.IntegrationBIService.RefreshBIIntegrations is not implemented"))
}

func (UnimplementedIntegrationBIServiceHandler) ListBIIntegrations(context.Context, *connect.Request[v1.ListBIIntegrationsRequest]) (*connect.Response[v1.ListBIIntegrationsResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("core.v1.IntegrationBIService.ListBIIntegrations is not implemented"))
}

func (UnimplementedIntegrationBIServiceHandler) GetBIIntegration(context.Context, *connect.Request[v1.GetBIIntegrationRequest]) (*connect.Response[v1.GetBIIntegrationResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("core.v1.IntegrationBIService.GetBIIntegration is not implemented"))
}

func (UnimplementedIntegrationBIServiceHandler) CreateBIIntegration(context.Context, *connect.Request[v1.CreateBIIntegrationRequest]) (*connect.Response[v1.CreateBIIntegrationResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("core.v1.IntegrationBIService.CreateBIIntegration is not implemented"))
}

func (UnimplementedIntegrationBIServiceHandler) DeleteBIIntegration(context.Context, *connect.Request[v1.DeleteBIIntegrationRequest]) (*connect.Response[v1.DeleteBIIntegrationResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("core.v1.IntegrationBIService.DeleteBIIntegration is not implemented"))
}
